Юрий, ваши замечания (вопросы) , сделанные на занятии-4:


Первые два конкретные.

1. В  /view/vw_articleShow.php присутствуют операции с файлом-текстом статьи.

2. В /view/vw_userProfile.php присутствует список имен календарных месяцев.

 Три следующих более общие по программе.

3. Как я преполагаю реализацию разделение исполнителей проекта; дизайнер, верстальщик,
   программист.

4. При рализации проектов как не запутаться в дереве представлений ?

5. В чем смысл выделения из контроллеров (класс Cnt_{controller}) дополнетельного
   класса  Cnt_vw_{controller} .

/////////////////////////////////////////////////////////////////////////////////////

    Ответы.

1. В  /view/vw_articleShow.php присутствуют операции с файлом-текстом статьи.

      В тексте был фрагмент загрузки текста статьи:
      ..........................
      if (file_exists($file)) {
         include $dir.'/'.$file ;
      }else {
         echo 'Статьи нет' ;
      }

    Было две возможности исправить: 1. включить текст статьи в параметры компонента.
    Этот сбособ не хорош тем, что тект (возможно большой) будет сидеть в памяти
    в процессе обработки компонентов. 2. сделать текст статьи новым компонентом,
    тогда он будет занимать память только при формировании представления, как результат
    метода template(.....) . Я сделал по 2 способу. Теперь фрагмент файла выглядит
    следующим образом:

              <?=$title;?>                            <!-- заголовок статьи -->
              <?=$partArticleText;?>                  <!-- текст статьи -->
              <?$errorMessage?>                       <!-- сообщение в случае отсутствия -->
/////////////////////////////////////////////////////////////////////////////////////

2. В /view/vw_userProfile.php присутствует список имен календарных месяцев.
   Перенес список имен месяцев в параметры компонента.

//////////////////////////////////////////////////////////////////////////////////////

3. Как я преполагаю реализацию разделение исполнителей проекта; дизайнер, верстальщик,
   программист.
   Все файлы в директории appl/view - это и есть результат работы верстальщика,
   дополненый программистом.

   Например, берем шаблон с наибольшим числом компонентов /layouts/lt_footerHalf.php .

   Воображаемый дизайнер нарисовал схему страницы:
    --------------------------------------------------------------
    Меню - заголовок страницы
    ---------------------------------------------------------------
    перечень рубрик статьи
    --------------------------------------------------------------
                                                                  | Меню -
                                                                  |список
         Текст статьи                                             |статей
                                                                  |
                                                                  |
    ---------------------------------------------------------------
             навигатор, обеспечивающий перебор статей
    ---------------------------------------------------------------

    Верстальщик разбил на блоки, подготовил css - файл и нарисовал следующее:
    <div id="topMenu">
    <меню-заголовок>
    </div>
    <div id="contentShowHalf">
        <текст_статьи>

        <div id="footerHalf">
            <Навигатор>
        </div>
    </div>
    <div id="rightPanel">
       <Меню-список_статей>
    </div>

    После этого программисту остается только обеспечить вычисление компонентов и
    вывод страницы на экран.

//////////////////////////////////////////////////////////////////////////////

4. При рализации проектов как не запутаться в дереве представлений ?
   Дерево представлений имеет следующий вид:

    main -> comp-1, comp-2, ..... , comp-n

            comp-1 -> comp-1-1, comp-1-2, .........

                      comp-1-1 -> comp-1-1-1, ..............
            comp-2 -> comp-2-1,............
     Как в этом не запутаться, особенно по прошествии времени при сопровождении ?

    Самый простой способ - сделать тестирующую утилиту, которая выполняет обход дерева,
    в простой форме выводит структуру и показывает в каком месте произошел обрыв.
    Для первичного контроля будет достаточно. А развить ее можно вплоть до генератора
    xml файла или чего-то подобного.

/////////////////////////////////////////////////////////////////////////////////

5. В чем смысл выделения из контроллеров (класс Cnt_{controller}) дополнетельного
   класса  Cnt_vw_{controller} .

   Подготовка данных для формирования представлений - это задача котроллера.

   Если оставить подготовку в самом котроллере, то это сильно утяжелит код.

   Часть котроллера, отвечающая за данные для представления, явно просится в отдельный класс.
   Этот класс хорошо структурируется по своим свойствам и методам.

//////////////////////////////////////////////////////////////////////////////////